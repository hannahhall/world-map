@model List<WorldMap.Models.Stats>

@{
    ViewData["Title"] = "Your Overall Stats";
}

<h2>Your Overall Stats</h2>
<div class="row">
    

<div class="list-group col-md-4">
  <a asp-action="Index" for="percentage" class="list-group-item active">
    Overall Stats
  </a>
  <a href="#" for="date" class="list-group-item">Progress by Date</a>
  <a href="#" for="avgNumTries" class="list-group-item">Average Number of Tries</a>
  <a href="#" class="list-group-item">Porta ac consectetur ac</a>
  <a href="#" class="list-group-item">Vestibulum at eros</a>
</div>
<div class="col-md-2">
    
</div>
<div class="col-md-6 charts">
    <canvas id="percentage"></canvas>
    
</div>
</div>

@section Scripts
{
    <script>
        const stats = @Html.Raw(
            Json.Serialize(Model, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
        );
        //console.log(stats);
        let successesArr = stats.map(x => x.Success);
        let ctx = $('#percentage')[0].getContext('2d');
        let chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'pie',
            // The data for our dataset
            data: {
                labels: ["Right", "Wrong"],
                datasets: [{
                    label: "My First dataset",
                    backgroundColor: ["rgb(255, 99, 132)", "rgb(54, 162, 235)"],
                    borderColor: 'rgb(255, 99, 132)',
                    data: [successesArr.filter(x => x === 1).length, successesArr.filter(x => x === 0).length],
                }]
            },
            // Configuration options go here
            options: {
                legend: {
                    display: true,
                    labels: {
                        fontSize: 14
                    }
                }
            }
        });
    </script>
    <script src="~/js/statsCharts.js" type="text/javascript"></script>
}