@model WorldMap.Models.StatsViewModels.StatsIndexViewModel

@{
    ViewData["Title"] = "Your Overall Stats";
}

<nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#link-area" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand">Your Overall Stats</a>
    </div>
    <div class="collapse navbar-collapse" id="link-area">
      <ul class="nav navbar-nav navbar-right">
        <li class="dropdown active">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Overall <span class="caret"></span></a>
            <ul class="dropdown-menu">
                <li><a href="#" for="Overall">Overall</a></li>
                <li><a href="#" for="Europe">Europe</a></li>
                <li><a href="#" for="Africa" >Africa</a></li>
                <li><a href="#" for="Asia" >Asia</a></li>
                <li><a href="#" for="NorthAmerica" >North America</a></li>
                <li><a href="#" for="SouthAmerica" >South America</a></li>
                <li><a href="#" for="Oceania" >Oceania</a></li>
            </ul>
        </li>
        <li><a asp-action="ProgressByDate">Progress By Date</a></li>
        <li><a asp-action="AverageNumberTries">Average Number of Tries</a></li>
      </ul>
  </div>
</nav>
<div class="row">
    
   
    <div class="col-md-3"></div>
    <div class="col-md-6 charts">
        <p class="para">There is no data for this area</p>
        <canvas id="percentage"></canvas>
    </div>
</div>

@section Scripts
{
    <script>
        const stats = (function () {
            this.Overall = @Html.Raw(
                Json.Serialize(Model.OverallStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            this.Europe = @Html.Raw(
                Json.Serialize(Model.EuropeStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            this.Africa = @Html.Raw(
                Json.Serialize(Model.AfricaStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            this.Asia = @Html.Raw(
                Json.Serialize(Model.AsiaStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            this.NorthAmerica = @Html.Raw(
                Json.Serialize(Model.NorthAmericaStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            this.SouthAmerica = @Html.Raw(
                Json.Serialize(Model.SouthAmericaStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            this.Oceania = @Html.Raw(
                Json.Serialize(Model.OceaniaStats, new JsonSerializerSettings(){ReferenceLoopHandling = ReferenceLoopHandling.Ignore})
            );
            return this;
        })();
    </script>
    <script src="~/js/statsIndex.js" type="text/javascript"></script>
}